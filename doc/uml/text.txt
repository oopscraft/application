	<!-- ========================================================== -->
	<!-- API SECURITY 												-->
	<!-- ========================================================== -->
	<!-- 
    <http pattern="/api/oauth/token" create-session="stateless" use-expressions="false"
              authentication-manager-ref="clientAuthenticationManager">
        <intercept-url pattern="/api/oauth/token" access="IS_AUTHENTICATED_FULLY"/>
        <anonymous enabled="true"/>
        <http-basic entry-point-ref="clientAuthenticationEntryPoint"/>
        <access-denied-handler ref="oauthAccessDeniedHandler"/>
    </http>
	<beans:bean id="clientAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<beans:property name="realmName" value="test/client" />
		<beans:property name="typeName" value="Basic" />
	</beans:bean>
	<beans:bean id="clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<beans:property name="authenticationManager" ref="clientAuthenticationManager" />
	</beans:bean>
	<authentication-manager id="clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
		<authentication-provider user-service-ref="clientDetailsUserService" />
	</authentication-manager>
	<beans:bean id="clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<beans:constructor-arg ref="clientDetails" />
	</beans:bean>
	<beans:bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
    <beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <beans:property name="tokenStore" ref="tokenStore"/>
        <beans:property name="supportRefreshToken" value="true"/>
        <beans:property name="accessTokenValiditySeconds" value="300000"/>
        <beans:property name="clientDetailsService" ref="clientDetails"/>
    </beans:bean>
    <beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>
	<oauth:client-details-service id="clientDetails">
		<oauth:client client-id="the_client" authorized-grant-types="authorization_code,client_credentials"
            authorities="ROLE_USER" scope="read,write,trust" secret="secret" />
		<oauth:client client-id="my-trusted-client-with-secret" authorized-grant-types="password,authorization_code,refresh_token,implicit"
			secret="somesecret" authorities="ROLE_USER" />
	</oauth:client-details-service>
    <oauth:authorization-server client-details-service-ref="clientDetails" token-services-ref="tokenServices"
                                user-approval-handler-ref="userApprovalHandler">
        <oauth:authorization-code/>
        <oauth:implicit/>
        <oauth:refresh-token/>
        <oauth:client-credentials/>
        <oauth:password/>
    </oauth:authorization-server>
    
   <beans:bean id="userApprovalHandler"
          class="org.springframework.security.oauth2.provider.approval.ApprovalStoreUserApprovalHandler">
        <beans:property name="approvalStore" ref="approvalStore"/>
        <beans:property name="clientDetailsService" ref="clientDetails"/>
        <beans:property name="requestFactory">
            <beans:bean class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
                <beans:constructor-arg index="0" ref="clientDetails"/>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <beans:bean id="approvalStore" class="org.springframework.security.oauth2.provider.approval.TokenApprovalStore">
        <beans:property name="tokenStore" ref="tokenStore"/>
    </beans:bean>
    <oauth:resource-server id="resourceServerFilter" resource-id="conference" token-services-ref="tokenServices"/>
	-->
